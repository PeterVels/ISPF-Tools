address ISPEXEC
/* Populate the lne.X values as you normnally would.
   I have just dummied up some data here */
lne.1 = 'B' 'A' 'PROGA' 'COBOL' 1  24  'R' 'N' 12345 8
lne.2 = 'B' 'D' 'PROGB' 'ASM  ' 1  24  'R' 'U' 23451 7
lne.3 = 'A' 'F' 'PROGC' 'PL/1 ' 1  24  'R' 'R' 34512 1
lne.4 = 'B' 'X' 'PROGD' 'COBOL' 1  24  'R' 'N' 45123 2
lne.5 = 'B' 'X' 'PROGE' 'COBOL' 1  24  'R' 'R' 51234 3
lne.6 = 'A' 'V' 'PROGF' 'COBOL' 1  24  'R' 'U' 12345 4
lne.7 = 'B' 'A' 'PROGA' 'COBOL' 1  24  'R' 'N' 12345 8
lne.8 = 'B' 'D' 'PROGB' 'ASM  ' 1  24  'R' 'U' 23451 7
lne.9 = 'A' 'F' 'PROGC' 'PL/1 ' 1  24  'R' 'R' 34512 1
lne.10 = 'B' 'X' 'PROGA' 'COBOL' 1  24  'R' 'N' 45123 2
lne.11 = 'B' 'X' 'PROGB' 'COBOL' 1  24  'R' 'U' 51234 3
lne.12 = 'A' 'V' 'PROGC' 'COBOL' 1  24  'R' 'R' 12345 4
lne.13 = 'A' 'V' 'PROGD' 'COBOL' 1  24  'R' 'N' 12345 4
lne.14 = 'A' 'V' 'PROGE' 'COBOL' 1  24  'R' 'R' 12345 4
lne.15 = 'A' 'V' 'PROGF' 'COBOL' 1  24  'R' 'U' 12345 4
lne.16 = 'A' 'V' 'PROGA' 'COBOL' 1  24  'R' 'N' 12345 4
lne.17 = 'A' 'V' 'PROGB' 'COBOL' 1  24  'R' 'U' 12345 4
lne.18 = 'A' 'V' 'PROGC' 'COBOL' 1  24  'R' 'R' 12345 4
lne.19 = 'A' 'V' 'PROGA' 'COBOL' 1  24  'R' 'N' 12345 4
lne.20 = 'A' 'V' 'PROGB' 'COBOL' 1  24  'R' 'U' 12345 4
lne.21 = 'B' 'X' 'PROGC' 'COBOL' 1  24  'R' 'R' 51234 3
lne.22 = 'A' 'V' 'PROGD' 'COBOL' 1  24  'R' 'N' 12345 4
lne.23 = 'A' 'V' 'PROGE' 'COBOL' 1  24  'R' 'R' 12345 4
lne.24 = 'A' 'V' 'PROGF' 'COBOL' 1  24  'R' 'U' 12345 4
lne.25 = 'A' 'V' 'PROGA' 'COBOL' 1  24  'R' 'N' 12345 4
lne.26 = 'A' 'V' 'PROGB' 'COBOL' 1  24  'R' 'U' 12345 4
lne.27 = 'A' 'V' 'PROGC' 'COBOL' 1  24  'R' 'R' 12345 4
lne.28 = 'A' 'V' 'PROGA' 'COBOL' 1  24  'R' 'N' 12345 4
lne.29 = 'A' 'V' 'PROGB' 'COBOL' 1  24  'R' 'U' 12345 4
lne.30 = 'A' 'V' 'PROGC' 'COBOL' 1  24  'R' 'R' 12345 4
lne.31 = 'B' 'X' 'PROGD' 'COBOL' 1  24  'R' 'N' 51234 3
lne.32 = 'A' 'V' 'PROGE' 'COBOL' 1  24  'R' 'R' 12345 4
lne.33 = 'A' 'V' 'PROGF' 'COBOL' 1  24  'R' 'U' 12345 4
lne.34 = 'A' 'V' 'PROGA' 'COBOL' 1  24  'R' 'N' 12345 4
lne.35 = 'A' 'V' 'PROGB' 'COBOL' 1  24  'R' 'U' 12345 4
lne.36 = 'A' 'V' 'PROGC' 'COBOL' 1  24  'R' 'R' 12345 4
lne.37 = 'A' 'V' 'PROGA' 'COBOL' 1  24  'R' 'N' 12345 4
lne.38 = 'A' 'V' 'PROGB' 'COBOL' 1  24  'R' 'U' 12345 4
lne.39 = 'A' 'V' 'PROGC' 'COBOL' 1  24  'R' 'R' 12345 4
lne.40 = 'A' 'V' 'PROGD' 'COBOL' 1  24  'R' 'N' 12345 4
lne.41 = 'B' 'X' 'PROGA' 'COBOL' 1  24  'R' 'R' 51234 3
lne.42 = 'A' 'V' 'PROGB' 'COBOL' 1  24  'R' 'U' 12345 4
lne.43 = 'A' 'V' 'PROGC' 'COBOL' 1  24  'R' 'N' 12345 4
lne.44 = 'A' 'V' 'PROGD' 'COBOL' 1  24  'R' 'U' 12345 4
lne.45 = 'A' 'V' 'PROGE' 'COBOL' 1  24  'R' 'N' 12345 4
lne.46 = 'A' 'V' 'PROGF' 'COBOL' 1  24  'R' 'U' 12345 4
lne.47 = 'A' 'V' 'PROGA' 'COBOL' 1  24  'R' 'R' 12345 4
lne.48 = 'A' 'V' 'PROGB' 'COBOL' 1  24  'R' 'N' 12345 4
lne.49 = 'A' 'V' 'PROGC' 'COBOL' 1  24  'R' 'R' 12345 4
lne.50 = 'A' 'V' 'PROGF' 'COBOL' 1  24  'R' 'U' 12345 4
lne.0  = 50
dynvar = '}'

do j = 1 to lne.0
 parse var lne.j Zb Zr Zp Zl Zn Zre Zs Zh Zle Zrp
 Zl = left(Zl,5) /* manually justify any "short" fields */

 /* Set 'hilite' according to the value in Zh  - catering for N, R and U */
 select
  when Zh = 'N' then
   hilite = '}'
  when Zh = 'R' then
   hilite = '{'
  when Zh = 'U' then
   hilite = '#'
 end

 /* Build up a dynamic variable. Each line is exactly 80 bytes long */
 dynvar = dynvar || left(Zb Zr Zp Zl Zn Zre Zs hilite || Zh'}' Zle Zrp, 80)
 /*                                            ------                   --  */
end

'display PANEL(CICNEWC3)'
